# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Agent360-Test-And-Deploy

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ published ]

jobs:
  tests:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        #python -m pip install flake8 pytest
        python -m pip install wheel
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    #- name: Lint with flake8
    #  run: |
        # stop the build if there are Python syntax errors or undefined names
        #flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        #flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    #- name: Test with pytest
    #  run: |
    #    pytest
    - name: Test build
      run: |
        pip install .
        python setup.py sdist bdist_egg bdist_wheel
  deploy:
    env:
      python-version: 3.8
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ env.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python-version }}
      - name: Install pypa/build
        run: python -m pip install build --user
      - name: Build a binary wheel and a source tarball
        run: python -m build --sdist --wheel --outdir dist/
      - name: Prepare RPM package
        if: github.event_name == 'release'
        run: python setup.py bdist_rpm
      - name: Copy spec file
        if: github.event_name == 'release'
        run: cp agent360.spec  build/bdist.linux-x86_64/rpm/SPECS/agent360.spec
      - name: Build RPM package
        if: github.event_name == 'release'
        run: rpmbuild -ba --define "__python python3" --define "_topdir $PWD/build/bdist.linux-x86_64/rpm" --clean ./build/bdist.linux-x86_64/rpm/SPECS/agent360.spec
      - uses: actions/upload-artifact@v4
        if: github.event_name == 'release'
        with:
          name: rpm package
          path: build/bdist.linux-x86_64/rpm/SRPMS/*.rpm
      - name: Publish distribution ðŸ“¦ to Test PyPI
        if: github.ref == 'refs/heads/master'
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true
      - name: Publish distribution ðŸ“¦ to PyPI
        if: github.event_name == 'release'
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
